#include<stdio.h>
#include<stdlib.h>
typedef struct node *nodeptr;
typedef struct node
{
    int data;
    nodeptr link;
}node;
void display(nodeptr ptr)
{
    int i=0;
    printf("\n---------------------------------------\n");
    while(ptr!=NULL)
    {
        printf("element %d : %d\n",i,ptr->data);
        ptr=ptr->link;
        i++;
        
    }
}
nodeptr insertfront(nodeptr head)
{
    nodeptr ptr=(nodeptr)malloc(sizeof(node));
    printf("ENter the data for new head node:\n");
    scanf("%d",&ptr->data);
    ptr->link=head;
    head=ptr;
    return head;
}
nodeptr insertindex(nodeptr head)
{
    nodeptr ptr=(nodeptr)malloc(sizeof(node));
    nodeptr p=head;
    int j=0,index;
    printf("eNTER THE INDEX\n");
    scanf("%d",&index);
    while(j!=index-1)
    {
        p=p->link;
        j++;
    }
    printf("enter data \n");
    scanf("%d",&ptr->data);
    ptr->link=p->link;
    p->link=ptr;
    return head;
    
}
nodeptr insertend(nodeptr head)
{
    nodeptr ptr,p;
    p=head;
    ptr=(nodeptr)malloc(sizeof(node));
    printf("Enter the data\n");
    scanf("%d",&ptr->data);
    while(p->link!=NULL)
    {
        p=p->link;
    }
    p->link=ptr;
    ptr->link=NULL;
    return head;
}
nodeptr insertnode(nodeptr head,nodeptr prev)
{
    nodeptr ptr,p;
    p=prev;
    ptr=(nodeptr)malloc(sizeof(node));
    printf("Enter the data\n");
    scanf("%d",&ptr->data);
    ptr->link=p->link;
    p->link=ptr;
    return head;
}

int main()
{
    nodeptr b,head,c;
    int n,j,x;
    char ch;
    head=(nodeptr)malloc(sizeof(node));
    b=(nodeptr)malloc(sizeof(node));
    c=(nodeptr)malloc(sizeof(node));
    c->data=20;
    c->link=NULL;
    b->data=19;
    b->link=c;
    head->data=10;
    head->link=b;
    display(head);
    while(x!=6)
    {
        printf("\nenter 1.insertfront\n2.insertend\n3.insertindex\n4.prev\n5.display\n");
        scanf("%d",&x);
        switch(x)
        {
            case 1: head=insertfront(head);
                    break;
            case 2: head=insertend(head);
                    break;
            case 3: head=insertindex(head);
                    break;
            case 4: printf("Enter the node\n");
                    scanf("%s",&ch);
                    head=insertnode(head,ch);
                    break;
            case 5: display(head);
                    
            
        }
    }
    
}